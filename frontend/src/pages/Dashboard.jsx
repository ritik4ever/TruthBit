import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { FileText, Eye, Shield, ExternalLink } from 'lucide-react';
import { apiService } from '../services/apiService';

function Dashboard({ user }) {
    const navigate = useNavigate();
    const [articles, setArticles] = useState([]);
    const [signatures, setSignatures] = useState([]);
    const [stats, setStats] = useState({
        totalArticles: 0,
        totalViews: 0,
        totalSignatures: 0,
        verifiedStatus: 'unverified'
    });

    useEffect(() => {
        if (user) {
            loadDashboard();
        }
    }, [user]);

    const loadDashboard = async () => {
        try {
            const allArticles = await apiService.getArticles();

            const userArticles = allArticles.filter(article =>
                article.authorId === user.id ||
                (article.anonymous && localStorage.getItem(`my_article_${article.id}`))
            );

            setArticles(userArticles);

            const totalViews = userArticles.reduce((sum, article) => sum + (article.views || 0), 0);

            try {
                const sigResponse = await fetch(`http://localhost:5000/api/signatures/by-address/${user.id}`);
                const userSignatures = await sigResponse.json();
                setSignatures(userSignatures);

                setStats({
                    totalArticles: userArticles.length,
                    totalViews: totalViews,
                    totalSignatures: userSignatures.length,
                    verifiedStatus: user.verificationLevel
                });
            } catch (error) {
                console.error('Failed to load signatures:', error);
                setStats({
                    totalArticles: userArticles.length,
                    totalViews: totalViews,
                    totalSignatures: 0,
                    verifiedStatus: user.verificationLevel
                });
            }
        } catch (error) {
            console.error('Failed to load dashboard:', error);
        }
    };

    const downloadCertificate = (sig) => {
        const cert = `
DOCUMENT SIGNATURE CERTIFICATE
================================

Document: ${sig.documentName}
Hash: ${sig.documentHash}
Signed By: ${sig.signerName}
Signer Address: ${sig.signerAddress}
Timestamp: ${new Date(sig.timestamp).toLocaleString()}

Blockchain Proof:
Inscription ID: ${sig.inscriptionId}
Transaction ID: ${sig.txid}

Verification URL: https://mempool.space/signet/tx/${sig.txid}

Generated by TruthBit - Censorship-Proof Publishing Platform
`;
        const blob = new Blob([cert], { type: 'text/plain' });
        const url = URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `certificate-${sig.id}.txt`;
        a.click();
        URL.revokeObjectURL(url);
    };

    return (
        <div className="container" style={{ padding: '40px 24px' }}>
            <h1 style={{ fontSize: '32px', fontWeight: 700, marginBottom: '32px' }}>
                Dashboard
            </h1>

            <div style={{
                display: 'grid',
                gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',
                gap: '20px',
                marginBottom: '48px'
            }}>
                <div className="card" style={{ textAlign: 'center' }}>
                    <FileText size={32} color="var(--primary)" style={{ marginBottom: '12px' }} />
                    <h3 style={{ fontSize: '28px', fontWeight: 700, marginBottom: '4px' }}>
                        {stats.totalArticles}
                    </h3>
                    <p style={{ color: 'var(--dark-medium)' }}>Articles Published</p>
                </div>

                <div className="card" style={{ textAlign: 'center' }}>
                    <Eye size={32} color="var(--primary)" style={{ marginBottom: '12px' }} />
                    <h3 style={{ fontSize: '28px', fontWeight: 700, marginBottom: '4px' }}>
                        {stats.totalViews}
                    </h3>
                    <p style={{ color: 'var(--dark-medium)' }}>Total Views</p>
                </div>

                <div className="card" style={{ textAlign: 'center' }}>
                    <Shield size={32} color="var(--secondary)" style={{ marginBottom: '12px' }} />
                    <h3 style={{ fontSize: '28px', fontWeight: 700, marginBottom: '4px' }}>
                        {stats.totalSignatures}
                    </h3>
                    <p style={{ color: 'var(--dark-medium)' }}>Documents Signed</p>
                </div>

                <div className="card" style={{ textAlign: 'center' }}>
                    <Shield size={32} color="var(--secondary)" style={{ marginBottom: '12px' }} />
                    <h3 style={{
                        fontSize: '20px',
                        fontWeight: 700,
                        marginBottom: '4px',
                        color: 'var(--secondary)',
                        textTransform: 'capitalize'
                    }}>
                        {stats.verifiedStatus}
                    </h3>
                    <p style={{ color: 'var(--dark-medium)' }}>Verification Status</p>
                </div>
            </div>

            <h2 style={{ fontSize: '24px', fontWeight: 700, marginBottom: '24px' }}>
                Your Identity
            </h2>

            <div className="card" style={{ marginBottom: '48px' }}>
                <div style={{ display: 'flex', gap: '20px', alignItems: 'center' }}>
                    <div style={{
                        width: '64px',
                        height: '64px',
                        borderRadius: '50%',
                        background: 'var(--primary)',
                        display: 'flex',
                        alignItems: 'center',
                        justifyContent: 'center',
                        color: 'white',
                        fontSize: '24px',
                        fontWeight: 700
                    }}>
                        {user.name.charAt(0)}
                    </div>
                    <div style={{ flex: 1 }}>
                        <h3 style={{ fontSize: '20px', fontWeight: 600, marginBottom: '8px' }}>
                            {user.name}
                            {user.verificationLevel === 'verified' && (
                                <span style={{
                                    marginLeft: '12px',
                                    padding: '4px 12px',
                                    background: 'var(--secondary)',
                                    color: 'white',
                                    borderRadius: '12px',
                                    fontSize: '12px',
                                    fontWeight: 600
                                }}>
                                    Verified
                                </span>
                            )}
                        </h3>
                        <p style={{ color: 'var(--dark-medium)', fontSize: '14px' }}>
                            {user.role || 'Journalist'}
                        </p>
                        <p style={{
                            fontSize: '13px',
                            color: 'var(--dark-medium)',
                            fontFamily: 'monospace',
                            marginTop: '4px'
                        }}>
                            {stats.totalArticles} articles â€¢ Ordinal: ord_{user.id.substring(5, 15)}...
                        </p>
                    </div>
                </div>
            </div>

            <h2 style={{ fontSize: '24px', fontWeight: 700, marginBottom: '24px' }}>
                Your Publications
            </h2>

            {articles.length === 0 ? (
                <div className="card" style={{ textAlign: 'center', padding: '48px' }}>
                    <p style={{ color: 'var(--dark-medium)', marginBottom: '24px' }}>
                        You haven't published any articles yet
                    </p>
                    <button
                        className="btn-primary"
                        onClick={() => navigate('/publish')}
                    >
                        Publish Your First Article
                    </button>
                </div>
            ) : (
                <div style={{ display: 'grid', gap: '20px' }}>
                    {articles.map((article) => (
                        <div
                            key={article.id}
                            className="card"
                            style={{ cursor: 'pointer' }}
                            onClick={() => navigate(`/article/${article.id}`)}
                        >
                            <div style={{ display: 'flex', justifyContent: 'space-between', marginBottom: '8px' }}>
                                <span style={{
                                    display: 'inline-block',
                                    padding: '4px 12px',
                                    background: article.classification === 'public' ? '#E7F5EC' : '#FFF4E6',
                                    color: article.classification === 'public' ? 'var(--secondary)' : '#FF9500',
                                    borderRadius: '12px',
                                    fontSize: '12px',
                                    fontWeight: 600,
                                    textTransform: 'capitalize'
                                }}>
                                    {article.classification}
                                </span>
                            </div>

                            <h3 style={{ fontSize: '20px', fontWeight: 600, marginBottom: '12px' }}>
                                {article.title}
                            </h3>

                            <p style={{
                                color: 'var(--dark-medium)',
                                marginBottom: '16px',
                                lineHeight: 1.6
                            }}>
                                {article.excerpt}
                            </p>

                            <div style={{
                                display: 'flex',
                                justifyContent: 'space-between',
                                alignItems: 'center',
                                fontSize: '14px',
                                color: 'var(--dark-medium)'
                            }}>
                                <div>
                                    <span style={{ marginRight: '16px' }}>
                                        {new Date(article.publishedAt).toLocaleDateString()}
                                    </span>
                                    <span>
                                        <Eye size={14} style={{ verticalAlign: 'middle', marginRight: '4px' }} />
                                        {article.views} views
                                    </span>
                                </div>
                                <div>
                                    By: {article.authorName}
                                </div>
                            </div>
                        </div>
                    ))}
                </div>
            )}

            {signatures.length > 0 && (
                <>
                    <h2 style={{ fontSize: '24px', fontWeight: 700, marginBottom: '24px', marginTop: '48px' }}>
                        Your Signed Documents
                    </h2>

                    <div style={{ display: 'grid', gap: '20px' }}>
                        {signatures.map((sig) => (
                            <div key={sig.id} className="card">
                                <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start' }}>
                                    <div style={{ flex: 1 }}>
                                        <h3 style={{ fontSize: '18px', fontWeight: 600, marginBottom: '8px' }}>
                                            {sig.documentName}
                                        </h3>
                                        <p style={{
                                            fontSize: '13px',
                                            fontFamily: 'monospace',
                                            color: 'var(--dark-medium)',
                                            marginBottom: '12px',
                                            wordBreak: 'break-all'
                                        }}>
                                            Hash: {sig.documentHash.substring(0, 40)}...
                                        </p>
                                        <p style={{ fontSize: '14px', color: 'var(--dark-medium)', marginBottom: '8px' }}>
                                            Signed: {new Date(sig.timestamp).toLocaleString()}
                                        </p>

                                        <a
                                            href={`https://mempool.space/signet/tx/${sig.txid}`}
                                            target="_blank"
                                            rel="noopener noreferrer"
                                            style={{ fontSize: '14px', color: 'var(--primary)', textDecoration: 'none' }}
                                            onClick={(e) => e.stopPropagation()}
                                        >
                                            View on Bitcoin <ExternalLink size={14} style={{ verticalAlign: 'middle' }} />
                                        </a>
                                    </div>
                                    <button
                                        className="btn-secondary"
                                        style={{ padding: '8px 16px' }}
                                        onClick={(e) => {
                                            e.stopPropagation();
                                            downloadCertificate(sig);
                                        }}
                                    >
                                        Download Certificate
                                    </button>
                                </div>
                            </div>
                        ))}
                    </div>
                </>
            )}
        </div>
    );
}

export default Dashboard;